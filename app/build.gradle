apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.youngtard.yatl"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
}

dependencies {
//    def supportLibraryVersion = '27.1.1'
    def supportLibraryVersion = '28.0.0'
    def room_version = "2.1.0-alpha06"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
//    implementation "androidx.room:room-ktx:$room_version"



    implementation "com.android.support:support-v4:$supportLibraryVersion"
    testImplementation 'junit:junit:4.12'
    //so that we can mock kotlin classes which are final by default???
    testImplementation "org.mockito:mockito-inline:+"
    testImplementation 'com.android.support.test:rules:1.0.2' //needed?
    testImplementation "androidx.room:room-testing:$room_version"


    androidTestImplementation "org.mockito:mockito-android:+"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
